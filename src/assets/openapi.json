{
  "paths": {
    "/accounts/login": {
      "post": {
        "summary": "Log in to the account. Returns the connection token",
        "responses": {
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionToken"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCredentials"
              }
            }
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/data": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserShortProfile"
                }
              }
            }
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/logout": {
      "post": {
        "summary": "Log out form the server. Flushes the annotator's cookie",
        "responses": {
          "200": {}
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/notifications": {
      "get": {
        "summary": "Retrieve the user's notifications",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationData"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "delete": {
        "summary": "Delete a user's notification",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDelete"
              }
            }
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/campaigns/available_corpora": {
      "get": {
        "summary": "Get a list of available folder and CSV corpora",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CorporaListing"
                }
              }
            }
          }
        },
        "tags": [
          "campaigns"
        ]
      }
    },
    "/campaigns/admin/": {
      "post": {
        "summary": "Creates a new campaign",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCreation"
              }
            }
          }
        },
        "tags": [
          "campaigns"
        ]
      },
      "put": {
        "summary": "Update a campaign",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignEdit"
              }
            }
          }
        },
        "tags": [
          "campaigns"
        ]
      },
      "delete": {
        "summary": "Delete a campaign",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignDelete"
              }
            }
          }
        },
        "tags": [
          "campaigns"
        ]
      }
    },
    "/campaigns/list/": {
      "get": {
        "summary": "List all created campaigns, in summary form",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignShort"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "campaigns"
        ]
      }
    },
    "/campaigns/view/{campaign_slug}": {
      "get": {
        "summary": "Returns the full campaign data",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignFull"
                }
              }
            }
          }
        },
        "tags": [
          "campaigns"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "campaign_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/campaigns/wiki/update/{campaign_slug}": {
      "post": {
        "summary": "Update the campaign's wiki page",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignWikiPage"
              }
            }
          }
        },
        "tags": [
          "campaigns"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "campaign_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/campaigns/wiki/view/{campaign_slug}": {
      "get": {
        "summary": "Retrieve the campaign's wikipage content",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignWikiPage"
                }
              }
            }
          }
        },
        "tags": [
          "campaigns"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "campaign_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/campaigns/subscribe": {
      "post": {
        "summary": "Subscribes or unsubscribes an admin from a campaign",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSubscriptionUpdate"
              }
            }
          }
        },
        "tags": [
          "campaigns"
        ]
      }
    },
    "/annotators/manage": {
      "post": {
        "summary": "Adds a new user",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotatorCreation"
              }
            }
          }
        },
        "tags": [
          "annotators"
        ]
      },
      "put": {
        "summary": "Updates an existing user",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotatorCreation"
              }
            }
          }
        },
        "tags": [
          "annotators"
        ]
      },
      "delete": {
        "summary": "Deletes an existing user",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotatorDeletion"
              }
            }
          }
        },
        "tags": [
          "annotators"
        ]
      }
    },
    "/annotators/view/{username}": {
      "get": {
        "summary": "Display a an annotator's full profile",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotatorFullProfile"
                }
              }
            }
          }
        },
        "tags": [
          "annotators"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/annotators/lock": {
      "post": {
        "summary": "Locks or unlocks an annotator's account",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotatorLockRequest"
              }
            }
          }
        },
        "tags": [
          "annotators"
        ]
      }
    },
    "/annotators/list": {
      "get": {
        "summary": "Lists all annotators registered in DB",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotatorShortProfile"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "annotators"
        ]
      }
    },
    "/analytics/basic/{campain_slug}": {
      "get": {
        "tags": [
          "analytics"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "campain_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/analytics/complete/{campain_slug}": {
      "get": {
        "tags": [
          "analytics"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "campain_slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/analytics/gamma": {
      "post": {
        "tags": [
          "analytics"
        ]
      }
    },
    "/tasks/list/assigned": {
      "get": {
        "summary": "Lists all tasks assigned to the currently logged-in annotator",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskShort"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/assign": {
      "post": {
        "summary": "Assign annotating tasks (linked to an audio file) to annotators",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/delete/{task_id}": {
      "delete": {
        "summary": "Delete an assigned task",
        "responses": {
          "200": {}
        },
        "tags": [
          "tasks"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tasks/lock/": {
      "post": {
        "summary": "Lock a task, preventing a user from making any change to it",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskLockRequest"
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/status/admin/{task_id}": {
      "get": {
        "summary": "Returns the full task status for the admin task view",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFullAdmin"
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tasks/status/annotator/{task_id}": {
      "get": {
        "summary": "Returns the annotator's task status, for the annotator task view",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFullAnnotator"
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tasks/submit/{task_id}": {
      "post": {
        "summary": "Textgridsubmission handler",
        "responses": {
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextGridErrors"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskTextgridSubmission"
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tasks/validate/{task_id}": {
      "post": {
        "summary": "Submits a textgrid to a task. The task will figure out by itself\nthe current step it's supposed to belong to, and return any validation error",
        "responses": {
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextGridErrors"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskTextgridSubmission"
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tasks/comment/{task_id}": {
      "get": {
        "summary": "Retrieves the list of comments for a task",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskComment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "post": {
        "summary": "Adds a comment to a task",
        "responses": {
          "200": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCommentSubmission"
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "info": {
    "title": "Seshat API",
    "version": "1"
  },
  "tags": [
    {
      "name": "accounts",
      "description": "Login/logout operations"
    },
    {
      "name": "campaigns",
      "description": "Operations to display and create campaigns"
    },
    {
      "name": "annotators",
      "description": "Annotators administration and creation"
    },
    {
      "name": "analytics",
      "description": "Operations to display and compute analytics on campaigns"
    },
    {
      "name": "tasks",
      "description": "Operations to manage, interact with and display tasks"
    }
  ],
  "openapi": "3.0.2",
  "components": {
    "schemas": {
      "LoginCredentials": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "login",
          "password"
        ]
      },
      "ConnectionToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "UserShortProfile": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "fullname": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "fullname",
          "last_name",
          "type",
          "username"
        ]
      },
      "NotificationData": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "object_id": {
            "type": "string"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "notif_type": {
            "type": "string"
          },
          "object_type": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "notif_type",
          "object_id",
          "object_type",
          "time"
        ]
      },
      "NotificationDelete": {
        "type": "object",
        "properties": {
          "notif_id": {
            "type": "string"
          }
        },
        "required": [
          "notif_id"
        ]
      },
      "CorporaListing": {
        "type": "object",
        "properties": {
          "folders_corpora": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "csv_corpora": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TierSpecifications": {
        "type": "object",
        "properties": {
          "parser_name": {
            "type": "string"
          },
          "content_type": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allow_empty": {
            "type": "boolean"
          },
          "validate_tier": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "required",
          "validate_tier"
        ]
      },
      "CampaignCreation": {
        "type": "object",
        "properties": {
          "check_textgrids": {
            "type": "boolean"
          },
          "checking_scheme": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TierSpecifications"
            }
          },
          "data_csv": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "data_folder": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "enable_audio_dl": {
            "type": "boolean"
          }
        },
        "required": [
          "enable_audio_dl",
          "name"
        ]
      },
      "CampaignEdit": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "name",
          "slug"
        ]
      },
      "CampaignDelete": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "slug"
        ]
      },
      "CampaignShort": {
        "type": "object",
        "properties": {
          "assigned_files": {
            "type": "integer",
            "format": "int32"
          },
          "check_textgrids": {
            "type": "boolean"
          },
          "annotators": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total_files": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "tiers_number": {
            "type": "integer",
            "format": "int32"
          },
          "slug": {
            "type": "string"
          },
          "total_tasks": {
            "type": "integer",
            "format": "int32"
          },
          "completed_tasks": {
            "type": "integer",
            "format": "int32"
          },
          "corpus_path": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/UserShortProfile"
          }
        },
        "required": [
          "assigned_files",
          "check_textgrids",
          "completed_tasks",
          "corpus_path",
          "creator",
          "name",
          "slug",
          "total_files",
          "total_tasks"
        ]
      },
      "TaskShort": {
        "type": "object",
        "properties": {
          "assigner": {
            "type": "string"
          },
          "deadline": {
            "type": "string",
            "format": "date"
          },
          "task_type": {
            "type": "string"
          },
          "creation_time": {
            "type": "string",
            "format": "date-time"
          },
          "annotators": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_locked": {
            "type": "boolean"
          },
          "filename": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "assigner",
          "creation_time",
          "filename",
          "id",
          "is_locked",
          "status",
          "task_type"
        ]
      },
      "CampaignFull": {
        "type": "object",
        "properties": {
          "assigned_files": {
            "type": "integer",
            "format": "int32"
          },
          "check_textgrids": {
            "type": "boolean"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskShort"
            }
          },
          "annotators": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total_files": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "tiers_number": {
            "type": "integer",
            "format": "int32"
          },
          "slug": {
            "type": "string"
          },
          "total_tasks": {
            "type": "integer",
            "format": "int32"
          },
          "completed_tasks": {
            "type": "integer",
            "format": "int32"
          },
          "corpus_path": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/UserShortProfile"
          }
        },
        "required": [
          "assigned_files",
          "check_textgrids",
          "completed_tasks",
          "corpus_path",
          "creator",
          "name",
          "slug",
          "total_files",
          "total_tasks"
        ]
      },
      "CampaignWikiPage": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "last_edit": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "content"
        ]
      },
      "CampaignSubscriptionUpdate": {
        "type": "object",
        "properties": {
          "subscription_status": {
            "type": "boolean"
          },
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "slug",
          "subscription_status"
        ]
      },
      "AnnotatorCreation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "password",
          "username"
        ]
      },
      "AnnotatorDeletion": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          }
        },
        "required": [
          "username"
        ]
      },
      "AnnotatorFullProfile": {
        "type": "object",
        "properties": {
          "active_tasks": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "last_activity": {
            "type": "string",
            "format": "date-time"
          },
          "fullname": {
            "type": "string"
          },
          "assigned_tasks": {
            "type": "integer",
            "format": "int32"
          },
          "first_name": {
            "type": "string"
          },
          "creation_date": {
            "type": "string",
            "format": "date"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskShort"
            }
          },
          "last_name": {
            "type": "string"
          },
          "finished_tasks": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "active_tasks",
          "assigned_tasks",
          "creation_date",
          "email",
          "finished_tasks",
          "first_name",
          "fullname",
          "last_activity",
          "last_name",
          "type",
          "username"
        ]
      },
      "AnnotatorLockRequest": {
        "type": "object",
        "properties": {
          "lock_status": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "lock_status",
          "username"
        ]
      },
      "AnnotatorShortProfile": {
        "type": "object",
        "properties": {
          "active_tasks": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "last_activity": {
            "type": "string",
            "format": "date-time"
          },
          "fullname": {
            "type": "string"
          },
          "assigned_tasks": {
            "type": "integer",
            "format": "int32"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "finished_tasks": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "active_tasks",
          "assigned_tasks",
          "finished_tasks",
          "first_name",
          "fullname",
          "last_activity",
          "last_name",
          "type",
          "username"
        ]
      },
      "DoubleAnnotatorAssignment": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        },
        "required": [
          "reference",
          "target"
        ]
      },
      "SingleAnnotatorAssignment": {
        "type": "object",
        "properties": {
          "annotator": {
            "type": "string"
          }
        },
        "required": [
          "annotator"
        ]
      },
      "TaskAssignment": {
        "type": "object",
        "properties": {
          "audio_files": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deadline": {
            "type": "string",
            "format": "date"
          },
          "double_annot_assign": {
            "$ref": "#/components/schemas/DoubleAnnotatorAssignment"
          },
          "campaign": {
            "type": "string"
          },
          "single_annot_assign": {
            "$ref": "#/components/schemas/SingleAnnotatorAssignment"
          }
        },
        "required": [
          "campaign"
        ]
      },
      "TaskLockRequest": {
        "type": "object",
        "properties": {
          "task_id": {
            "type": "string"
          },
          "lock_status": {
            "type": "boolean"
          }
        },
        "required": [
          "lock_status",
          "task_id"
        ]
      },
      "TaskTextGrid": {
        "type": "object",
        "properties": {
          "is_done": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "is_done",
          "name"
        ]
      },
      "TaskComment": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/UserShortProfile"
          },
          "creation": {
            "type": "string",
            "format": "date"
          }
        },
        "required": [
          "author",
          "content",
          "creation"
        ]
      },
      "TaskFullAdmin": {
        "type": "object",
        "properties": {
          "assigner": {
            "type": "string"
          },
          "textgrids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTextGrid"
            }
          },
          "deadline": {
            "type": "string",
            "format": "date"
          },
          "task_type": {
            "type": "string"
          },
          "creation_time": {
            "type": "string",
            "format": "date-time"
          },
          "annotators": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_locked": {
            "type": "boolean"
          },
          "filename": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskComment"
            }
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "assigner",
          "creation_time",
          "filename",
          "id",
          "is_locked",
          "status",
          "task_type"
        ]
      },
      "FrontierMergeConflict": {
        "type": "object",
        "properties": {
          "time_b": {
            "type": "number",
            "format": "float"
          },
          "interval_index_after": {
            "type": "integer",
            "format": "int32"
          },
          "interval_index_before": {
            "type": "integer",
            "format": "int32"
          },
          "time_a": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "interval_index_after",
          "interval_index_before",
          "time_a",
          "time_b"
        ]
      },
      "TierMergeConflicts": {
        "type": "object",
        "properties": {
          "tier_b": {
            "type": "string"
          },
          "tier_a": {
            "type": "string"
          },
          "frontiers_merge": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrontierMergeConflict"
            }
          }
        },
        "required": [
          "tier_a",
          "tier_b"
        ]
      },
      "MergeConflicts": {
        "type": "object",
        "properties": {
          "tiers_merges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TierMergeConflicts"
            }
          }
        }
      },
      "TaskFullAnnotator": {
        "type": "object",
        "properties": {
          "frontiers_merge_table": {
            "$ref": "#/components/schemas/MergeConflicts"
          },
          "current_tg_download": {
            "type": "string"
          },
          "assigner": {
            "type": "string"
          },
          "deadline": {
            "type": "string",
            "format": "date"
          },
          "task_type": {
            "type": "string"
          },
          "creation_time": {
            "type": "string",
            "format": "date-time"
          },
          "annotators": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "current_status_idx": {
            "type": "integer",
            "format": "int32"
          },
          "is_locked": {
            "type": "boolean"
          },
          "filename": {
            "type": "string"
          },
          "allow_file_upload": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "allow_starter_dl": {
            "type": "boolean"
          },
          "all_statuses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "allow_file_upload",
          "allow_starter_dl",
          "assigner",
          "creation_time",
          "current_status_idx",
          "filename",
          "id",
          "is_locked",
          "status",
          "task_type"
        ]
      },
      "TaskTextgridSubmission": {
        "type": "object",
        "properties": {
          "textgrid_str": {
            "type": "string"
          }
        },
        "required": [
          "textgrid_str"
        ]
      },
      "AnnotMismatchError": {
        "type": "object",
        "properties": {
          "target_tier": {
            "type": "string"
          },
          "ref_annot": {
            "type": "string"
          },
          "target_annot": {
            "type": "string"
          },
          "ref_tier": {
            "type": "string"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "index",
          "ref_annot",
          "ref_tier",
          "target_annot",
          "target_tier"
        ]
      },
      "TimeMergeError": {
        "type": "object",
        "properties": {
          "tier_b": {
            "type": "string"
          },
          "threshold": {
            "type": "number",
            "format": "float"
          },
          "index_after": {
            "type": "integer",
            "format": "int32"
          },
          "index_before": {
            "type": "integer",
            "format": "int32"
          },
          "tier_a": {
            "type": "string"
          },
          "time_a": {
            "type": "integer",
            "format": "int32"
          },
          "time_b": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "index_after",
          "index_before",
          "threshold",
          "tier_a",
          "tier_b",
          "time_a",
          "time_b"
        ]
      },
      "AnnotationErrors": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string"
          },
          "end": {
            "type": "number",
            "format": "float"
          },
          "start": {
            "type": "number",
            "format": "float"
          },
          "tier": {
            "type": "string"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "annotation": {
            "type": "string"
          }
        },
        "required": [
          "annotation",
          "end",
          "index",
          "msg",
          "start",
          "tier"
        ]
      },
      "StructuralError": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string"
          }
        },
        "required": [
          "msg"
        ]
      },
      "TextGridErrors": {
        "type": "object",
        "properties": {
          "annot_mismatch": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnotMismatchError"
            }
          },
          "time_conflict": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeMergeError"
            }
          },
          "annot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AnnotationErrors"
            }
          },
          "structural": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructuralError"
            }
          }
        }
      },
      "TaskCommentSubmission": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "required": [
          "content"
        ]
      }
    }
  }
}